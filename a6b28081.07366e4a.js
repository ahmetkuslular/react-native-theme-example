(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return l})),n.d(t,"metadata",(function(){return s})),n.d(t,"toc",(function(){return p})),n.d(t,"default",(function(){return d}));var o=n(3),r=n(7),a=(n(0),n(88)),i=["components"],l={id:"provider",title:"Provider",slug:"/provider",hide_table_of_contents:!0,hide_title:!0},s={unversionedId:"provider",id:"provider",isDocsHomePage:!1,title:"Provider",description:"Provider",source:"@site/docs/provider.md",slug:"/provider",permalink:"/react-native-with-style/docs/provider",editUrl:"https://github.com/facebook/docusaurus/edit/master/website/docs/provider.md",version:"current",sidebar:"someSidebar",previous:{title:"Getting Started",permalink:"/react-native-with-style/docs/"},next:{title:"With Style",permalink:"/react-native-with-style/docs/with-style"}},p=[],c={toc:p};function d(e){var t=e.components,n=Object(r.a)(e,i);return Object(a.b)("wrapper",Object(o.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(a.b)("h1",{id:"provider"},"Provider"),Object(a.b)("p",null,"Before using with styles in your application, you need to wrap your app with ",Object(a.b)("inlineCode",{parentName:"p"},"ThemeProvider")," first."),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"ThemeProvider only takes ",Object(a.b)("inlineCode",{parentName:"p"},"theme")," and ",Object(a.b)("inlineCode",{parentName:"p"},"default Theme")," props.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'const theme = {\n  pallets: {\n    light: {\n      background: "black",\n    },\n    dark: {\n      background: "white",\n    },\n    blue: {\n      background: "darkBlue",\n    },\n  },\n  fonts: {\n    default: "roboto",\n  },\n  //You can pass other style elements you use. eg size, margin/padding values etc\n  ...otherStyleElements,\n};\n')),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"If you want to load different color palettes, you need to give these palettes in ",Object(a.b)("inlineCode",{parentName:"p"},"colors"),".\nThe keys you use here are important. You will use these keys when changing the theme.")),Object(a.b)("blockquote",null,Object(a.b)("p",{parentName:"blockquote"},"The default value of ",Object(a.b)("inlineCode",{parentName:"p"},"defaultTheme")," is ",Object(a.b)("inlineCode",{parentName:"p"},"light"),". You can give this field one of your color palettes under colors.")),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'import React from "react";\nimport { ThemeProvider } from "react-native-with-style";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme} defaultTheme="light">\n      {/* Your app components */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n')),Object(a.b)("h4",{id:"system-theme"},"System Theme"),Object(a.b)("p",null,"You can also use the value ",Object(a.b)("inlineCode",{parentName:"p"},"system")," If you pass it to ",Object(a.b)("inlineCode",{parentName:"p"},"system")," it will use the device's theme by default."),Object(a.b)("pre",null,Object(a.b)("code",{parentName:"pre",className:"language-jsx"},'import { ThemeProvider } from "react-native-with-style";\n\nconst App = () => {\n  return (\n    <ThemeProvider theme={theme} defaultTheme="system">\n      {/* Your app components */}\n    </ThemeProvider>\n  );\n};\n\nexport default App;\n')))}d.isMDXComponent=!0}}]);